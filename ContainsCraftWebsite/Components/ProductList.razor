@using Microsoft.AspNetCore.Components.Web
@using ContainsCraftWebsite.Models
@using ContainsCraftWebsite.Services
@inject JsonFileProductsService ProductService

    <div class="card-columns">
        @foreach (var product in ProductService.GetProducts())
        {
            <div class="card">
                <div class="card-img" style="background-image:url('@product.Img');"></div>
                <div class="card-body">
                    <h5 class="card-title">@product.Title</h5>
                </div>
                <div class="card-footer">
                    <small class="text-muted">
                        <button @onclick="(e=>SelectProduct(product.Id))"
                                data-toggle="modal"
                                data-target="#productModal"
                                class="btn btn-primary">More Info</button>
                    </small>
                </div>
            </div>
        }
    </div>


@if(selectProduct != null)
{
<div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productTitle">@selectProduct.Title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="card">
                    <div class="card-img" style="background-image: url('@selectProduct.Img');">
                    </div>
                    <div class="card-body">
                        <p class="card-text">@selectProduct.Description</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                @if (voteCount == 0)
                {
                    <span>Be the first to vote!</span>
                }
                else
                {
                    <span>@voteCount @voteLabel</span>
                }
                @for (int i = 1; i < 6; i++)
                {
                    var currentStar = i;
                    if (i <= currentRating)
                    {
                        <span class="fa fa-star checked" @onclick="(e => SubmitRating(currentStar))"></span>
                    }
                    else
                    {
                        <span class="fa fa-star" @onclick="(e => SubmitRating(currentStar))"></span>
                    }
                }
            </div>
        </div>
    </div>
</div>
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"/>

@code {
    Product selectProduct;
    string selectProductId;

    void SelectProduct(string productId)
    {
        selectProductId = productId;
        selectProduct = ProductService.GetProducts().First(x => x.Id == selectProductId);
        GetCurrentRating();
    }

    int currentRating = 0;
    int voteCount = 0;
    string voteLabel;

    void GetCurrentRating()
    {
        if (selectProduct.Ratings == null)
        {
            currentRating = 0;
            voteCount = 0;
        }
        else
        {
            voteCount = selectProduct.Ratings.Count();
            voteLabel = voteCount > 1 ? "Votes" : "Vote";
            currentRating = selectProduct.Ratings.Sum() / voteCount;

            System.Console.WriteLine($"Current rating for {selectProduct.Id}:  {currentRating}");
        }
    }

    void SubmitRating(int rating)
    {
        ProductService.AddRating(selectProductId, rating);
        SelectProduct(selectProductId);
    }
}
